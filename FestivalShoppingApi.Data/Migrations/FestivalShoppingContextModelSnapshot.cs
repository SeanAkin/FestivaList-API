// <auto-generated />
using System;
using FestivalShoppingApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FestivalShoppingApi.Data.Migrations
{
    [DbContext(typeof(FestivalShoppingContext))]
    partial class FestivalShoppingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("FestivalShoppingApi.Data.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ShoppingListId")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId");

                    b.HasIndex("ShoppingListId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Camping Gear",
                            ShoppingListId = new Guid("53fb2f13-37b4-41aa-a7cb-ccf484500b6d")
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Food & Drinks",
                            ShoppingListId = new Guid("53fb2f13-37b4-41aa-a7cb-ccf484500b6d")
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Clothing",
                            ShoppingListId = new Guid("53fb2f13-37b4-41aa-a7cb-ccf484500b6d")
                        });
                });

            modelBuilder.Entity("FestivalShoppingApi.Data.Models.Item", b =>
                {
                    b.Property<Guid>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Essential")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ShoppingListId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("ItemId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ShoppingListId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            ItemId = new Guid("d537a14a-487a-4947-bd83-cddfa8c040e2"),
                            CategoryId = 1,
                            Essential = true,
                            Name = "Tent",
                            ShoppingListId = new Guid("53fb2f13-37b4-41aa-a7cb-ccf484500b6d"),
                            Url = "https://example.com/tent"
                        },
                        new
                        {
                            ItemId = new Guid("b554f9b0-2856-43c6-ae6f-3d2d62b22572"),
                            CategoryId = 1,
                            Essential = true,
                            Name = "Sleeping Bag",
                            ShoppingListId = new Guid("53fb2f13-37b4-41aa-a7cb-ccf484500b6d"),
                            Url = "https://example.com/sleeping-bag"
                        },
                        new
                        {
                            ItemId = new Guid("b18c6e30-bfb7-4be0-b26f-9e33eea09e72"),
                            CategoryId = 1,
                            Essential = false,
                            Name = "Camping Stove",
                            ShoppingListId = new Guid("53fb2f13-37b4-41aa-a7cb-ccf484500b6d"),
                            Url = "https://example.com/camping-stove"
                        },
                        new
                        {
                            ItemId = new Guid("dc76dd85-9c9b-4f46-a02f-4104683a6c53"),
                            CategoryId = 2,
                            Essential = true,
                            Name = "Water Bottles",
                            ShoppingListId = new Guid("53fb2f13-37b4-41aa-a7cb-ccf484500b6d"),
                            Url = "https://example.com/water-bottles"
                        },
                        new
                        {
                            ItemId = new Guid("776edefb-31d3-4bea-82a1-2736f8d5f4e3"),
                            CategoryId = 2,
                            Essential = false,
                            Name = "Snacks",
                            ShoppingListId = new Guid("53fb2f13-37b4-41aa-a7cb-ccf484500b6d"),
                            Url = "https://example.com/snacks"
                        },
                        new
                        {
                            ItemId = new Guid("ef5c5204-4ae8-4591-a3d3-d7769225b4fa"),
                            CategoryId = 2,
                            Essential = true,
                            Name = "Canned Food",
                            ShoppingListId = new Guid("53fb2f13-37b4-41aa-a7cb-ccf484500b6d"),
                            Url = "https://example.com/canned-food"
                        },
                        new
                        {
                            ItemId = new Guid("28262b00-0905-47c5-b300-77a0193f373e"),
                            CategoryId = 3,
                            Essential = true,
                            Name = "Rain Jacket",
                            ShoppingListId = new Guid("53fb2f13-37b4-41aa-a7cb-ccf484500b6d"),
                            Url = "https://example.com/rain-jacket"
                        },
                        new
                        {
                            ItemId = new Guid("d2105fde-3967-4366-ac97-9f26432f5484"),
                            CategoryId = 3,
                            Essential = true,
                            Name = "Hiking Boots",
                            ShoppingListId = new Guid("53fb2f13-37b4-41aa-a7cb-ccf484500b6d"),
                            Url = "https://example.com/hiking-boots"
                        },
                        new
                        {
                            ItemId = new Guid("c118e240-7b43-487f-aa57-5523d3686d61"),
                            CategoryId = 3,
                            Essential = false,
                            Name = "Sunglasses",
                            ShoppingListId = new Guid("53fb2f13-37b4-41aa-a7cb-ccf484500b6d"),
                            Url = "https://example.com/sunglasses"
                        });
                });

            modelBuilder.Entity("FestivalShoppingApi.Data.Models.ShoppingList", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GuidId");

                    b.ToTable("ShoppingLists");

                    b.HasData(
                        new
                        {
                            GuidId = new Guid("53fb2f13-37b4-41aa-a7cb-ccf484500b6d"),
                            Name = "Festival Shopping List"
                        });
                });

            modelBuilder.Entity("FestivalShoppingApi.Data.Models.Category", b =>
                {
                    b.HasOne("FestivalShoppingApi.Data.Models.ShoppingList", "ShoppingList")
                        .WithMany("Categories")
                        .HasForeignKey("ShoppingListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShoppingList");
                });

            modelBuilder.Entity("FestivalShoppingApi.Data.Models.Item", b =>
                {
                    b.HasOne("FestivalShoppingApi.Data.Models.Category", "Category")
                        .WithMany("Items")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FestivalShoppingApi.Data.Models.ShoppingList", "ShoppingList")
                        .WithMany()
                        .HasForeignKey("ShoppingListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("ShoppingList");
                });

            modelBuilder.Entity("FestivalShoppingApi.Data.Models.Category", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("FestivalShoppingApi.Data.Models.ShoppingList", b =>
                {
                    b.Navigation("Categories");
                });
#pragma warning restore 612, 618
        }
    }
}

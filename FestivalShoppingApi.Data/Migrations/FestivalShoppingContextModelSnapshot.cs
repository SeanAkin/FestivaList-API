// <auto-generated />
using System;
using FestivalShoppingApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FestivalShoppingApi.Data.Migrations
{
    [DbContext(typeof(FestivalShoppingContext))]
    partial class FestivalShoppingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("FestivalShoppingApi.Data.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ShoppingListId")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId");

                    b.HasIndex("ShoppingListId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("892a6935-17e0-4230-9b76-58385a584394"),
                            Name = "Camping Gear",
                            ShoppingListId = new Guid("a169ab83-66df-4d32-995b-fe0467c1d857")
                        },
                        new
                        {
                            CategoryId = new Guid("3e5f85d9-e0fd-4266-aa65-25f07bc0fea9"),
                            Name = "Food & Drinks",
                            ShoppingListId = new Guid("a169ab83-66df-4d32-995b-fe0467c1d857")
                        },
                        new
                        {
                            CategoryId = new Guid("57b096f9-f827-420c-927c-ed39cd9cd997"),
                            Name = "Clothing",
                            ShoppingListId = new Guid("a169ab83-66df-4d32-995b-fe0467c1d857")
                        });
                });

            modelBuilder.Entity("FestivalShoppingApi.Data.Models.Item", b =>
                {
                    b.Property<Guid>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Essential")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ShoppingListId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("ItemId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ShoppingListId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            ItemId = new Guid("75546a6d-8a55-4e79-ab43-033e3b7b5d1d"),
                            CategoryId = new Guid("892a6935-17e0-4230-9b76-58385a584394"),
                            Essential = true,
                            Name = "Tent",
                            ShoppingListId = new Guid("a169ab83-66df-4d32-995b-fe0467c1d857"),
                            Url = "https://example.com/tent"
                        },
                        new
                        {
                            ItemId = new Guid("3d7b6cdd-a194-45a5-a439-9b3ad66fefb7"),
                            CategoryId = new Guid("892a6935-17e0-4230-9b76-58385a584394"),
                            Essential = true,
                            Name = "Sleeping Bag",
                            ShoppingListId = new Guid("a169ab83-66df-4d32-995b-fe0467c1d857"),
                            Url = "https://example.com/sleeping-bag"
                        },
                        new
                        {
                            ItemId = new Guid("f82f2378-0e64-4f3f-868f-e9d6d23f69cc"),
                            CategoryId = new Guid("892a6935-17e0-4230-9b76-58385a584394"),
                            Essential = false,
                            Name = "Camping Stove",
                            ShoppingListId = new Guid("a169ab83-66df-4d32-995b-fe0467c1d857"),
                            Url = "https://example.com/camping-stove"
                        },
                        new
                        {
                            ItemId = new Guid("e0645387-9e53-4924-82e5-8f6a05280c83"),
                            CategoryId = new Guid("3e5f85d9-e0fd-4266-aa65-25f07bc0fea9"),
                            Essential = true,
                            Name = "Water Bottles",
                            ShoppingListId = new Guid("a169ab83-66df-4d32-995b-fe0467c1d857"),
                            Url = "https://example.com/water-bottles"
                        },
                        new
                        {
                            ItemId = new Guid("07db6b6c-9d46-4de1-9c6e-0a318e307322"),
                            CategoryId = new Guid("3e5f85d9-e0fd-4266-aa65-25f07bc0fea9"),
                            Essential = false,
                            Name = "Snacks",
                            ShoppingListId = new Guid("a169ab83-66df-4d32-995b-fe0467c1d857"),
                            Url = "https://example.com/snacks"
                        },
                        new
                        {
                            ItemId = new Guid("5b4cfc6f-2e76-4a44-888f-2b8413370fcd"),
                            CategoryId = new Guid("3e5f85d9-e0fd-4266-aa65-25f07bc0fea9"),
                            Essential = true,
                            Name = "Canned Food",
                            ShoppingListId = new Guid("a169ab83-66df-4d32-995b-fe0467c1d857"),
                            Url = "https://example.com/canned-food"
                        },
                        new
                        {
                            ItemId = new Guid("966129e9-d399-4179-ae86-8a7b38d258e0"),
                            CategoryId = new Guid("57b096f9-f827-420c-927c-ed39cd9cd997"),
                            Essential = true,
                            Name = "Rain Jacket",
                            ShoppingListId = new Guid("a169ab83-66df-4d32-995b-fe0467c1d857"),
                            Url = "https://example.com/rain-jacket"
                        },
                        new
                        {
                            ItemId = new Guid("f25a8604-641a-4636-8ba2-083d08bea718"),
                            CategoryId = new Guid("57b096f9-f827-420c-927c-ed39cd9cd997"),
                            Essential = true,
                            Name = "Hiking Boots",
                            ShoppingListId = new Guid("a169ab83-66df-4d32-995b-fe0467c1d857"),
                            Url = "https://example.com/hiking-boots"
                        },
                        new
                        {
                            ItemId = new Guid("ea2bf610-fe2a-4c0f-9e4e-37474153a785"),
                            CategoryId = new Guid("57b096f9-f827-420c-927c-ed39cd9cd997"),
                            Essential = false,
                            Name = "Sunglasses",
                            ShoppingListId = new Guid("a169ab83-66df-4d32-995b-fe0467c1d857"),
                            Url = "https://example.com/sunglasses"
                        });
                });

            modelBuilder.Entity("FestivalShoppingApi.Data.Models.ShoppingList", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GuidId");

                    b.ToTable("ShoppingLists");

                    b.HasData(
                        new
                        {
                            GuidId = new Guid("a169ab83-66df-4d32-995b-fe0467c1d857"),
                            Name = "Festival Shopping List"
                        });
                });

            modelBuilder.Entity("FestivalShoppingApi.Data.Models.Category", b =>
                {
                    b.HasOne("FestivalShoppingApi.Data.Models.ShoppingList", "ShoppingList")
                        .WithMany("Categories")
                        .HasForeignKey("ShoppingListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShoppingList");
                });

            modelBuilder.Entity("FestivalShoppingApi.Data.Models.Item", b =>
                {
                    b.HasOne("FestivalShoppingApi.Data.Models.Category", "Category")
                        .WithMany("Items")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FestivalShoppingApi.Data.Models.ShoppingList", "ShoppingList")
                        .WithMany()
                        .HasForeignKey("ShoppingListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("ShoppingList");
                });

            modelBuilder.Entity("FestivalShoppingApi.Data.Models.Category", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("FestivalShoppingApi.Data.Models.ShoppingList", b =>
                {
                    b.Navigation("Categories");
                });
#pragma warning restore 612, 618
        }
    }
}

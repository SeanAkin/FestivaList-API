// <auto-generated />
using System;
using FestivalShoppingApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FestivalShoppingApi.Data.Data.Migrations
{
    [DbContext(typeof(FestivalShoppingContext))]
    partial class FestivalShoppingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("FestivalShoppingApi.Data.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ShoppingListId")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId");

                    b.HasIndex("ShoppingListId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("142295b9-ea08-4c36-ae62-abccdd5750fd"),
                            Name = "Camping Gear",
                            ShoppingListId = new Guid("c945b1a9-9a47-4bcd-9a11-3ec930d2c778")
                        },
                        new
                        {
                            CategoryId = new Guid("814ecaaf-d9ce-4cc1-a56e-8e1eeb88e4eb"),
                            Name = "Food & Drinks",
                            ShoppingListId = new Guid("c945b1a9-9a47-4bcd-9a11-3ec930d2c778")
                        },
                        new
                        {
                            CategoryId = new Guid("818f8e2f-6f65-4ac7-91f1-b49e3b6ecef6"),
                            Name = "Clothing",
                            ShoppingListId = new Guid("c945b1a9-9a47-4bcd-9a11-3ec930d2c778")
                        });
                });

            modelBuilder.Entity("FestivalShoppingApi.Data.Models.Item", b =>
                {
                    b.Property<Guid>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Essential")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ShoppingListId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("ItemId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ShoppingListId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            ItemId = new Guid("b20c0ea7-98f9-4af9-81aa-059a782c6506"),
                            CategoryId = new Guid("142295b9-ea08-4c36-ae62-abccdd5750fd"),
                            Essential = true,
                            Name = "Tent",
                            ShoppingListId = new Guid("c945b1a9-9a47-4bcd-9a11-3ec930d2c778"),
                            Url = "https://example.com/tent"
                        },
                        new
                        {
                            ItemId = new Guid("4bd7a802-314a-4bd4-88c3-bbc9cc039afc"),
                            CategoryId = new Guid("142295b9-ea08-4c36-ae62-abccdd5750fd"),
                            Essential = true,
                            Name = "Sleeping Bag",
                            ShoppingListId = new Guid("c945b1a9-9a47-4bcd-9a11-3ec930d2c778"),
                            Url = "https://example.com/sleeping-bag"
                        },
                        new
                        {
                            ItemId = new Guid("4b5f175b-4929-48f3-a717-225c8888b8f3"),
                            CategoryId = new Guid("142295b9-ea08-4c36-ae62-abccdd5750fd"),
                            Essential = false,
                            Name = "Camping Stove",
                            ShoppingListId = new Guid("c945b1a9-9a47-4bcd-9a11-3ec930d2c778"),
                            Url = "https://example.com/camping-stove"
                        },
                        new
                        {
                            ItemId = new Guid("5c47049f-846c-42f3-9290-e5a778cea53d"),
                            CategoryId = new Guid("814ecaaf-d9ce-4cc1-a56e-8e1eeb88e4eb"),
                            Essential = true,
                            Name = "Water Bottles",
                            ShoppingListId = new Guid("c945b1a9-9a47-4bcd-9a11-3ec930d2c778"),
                            Url = "https://example.com/water-bottles"
                        },
                        new
                        {
                            ItemId = new Guid("a1700298-391d-4431-a34b-790595ae96cb"),
                            CategoryId = new Guid("814ecaaf-d9ce-4cc1-a56e-8e1eeb88e4eb"),
                            Essential = false,
                            Name = "Snacks",
                            ShoppingListId = new Guid("c945b1a9-9a47-4bcd-9a11-3ec930d2c778"),
                            Url = "https://example.com/snacks"
                        },
                        new
                        {
                            ItemId = new Guid("861dbde2-ec71-454e-a3f3-0c3349ce4002"),
                            CategoryId = new Guid("814ecaaf-d9ce-4cc1-a56e-8e1eeb88e4eb"),
                            Essential = true,
                            Name = "Canned Food",
                            ShoppingListId = new Guid("c945b1a9-9a47-4bcd-9a11-3ec930d2c778"),
                            Url = "https://example.com/canned-food"
                        },
                        new
                        {
                            ItemId = new Guid("f70d9891-c283-4dad-b82b-311a8a61ac1d"),
                            CategoryId = new Guid("818f8e2f-6f65-4ac7-91f1-b49e3b6ecef6"),
                            Essential = true,
                            Name = "Rain Jacket",
                            ShoppingListId = new Guid("c945b1a9-9a47-4bcd-9a11-3ec930d2c778"),
                            Url = "https://example.com/rain-jacket"
                        },
                        new
                        {
                            ItemId = new Guid("ebf8dd16-08d3-4da9-bd59-b28778583b8b"),
                            CategoryId = new Guid("818f8e2f-6f65-4ac7-91f1-b49e3b6ecef6"),
                            Essential = true,
                            Name = "Hiking Boots",
                            ShoppingListId = new Guid("c945b1a9-9a47-4bcd-9a11-3ec930d2c778"),
                            Url = "https://example.com/hiking-boots"
                        },
                        new
                        {
                            ItemId = new Guid("b63523c2-57b4-415b-b5cd-8e617dd20196"),
                            CategoryId = new Guid("818f8e2f-6f65-4ac7-91f1-b49e3b6ecef6"),
                            Essential = false,
                            Name = "Sunglasses",
                            ShoppingListId = new Guid("c945b1a9-9a47-4bcd-9a11-3ec930d2c778"),
                            Url = "https://example.com/sunglasses"
                        });
                });

            modelBuilder.Entity("FestivalShoppingApi.Data.Models.ShoppingList", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GuidId");

                    b.ToTable("ShoppingLists");

                    b.HasData(
                        new
                        {
                            GuidId = new Guid("c945b1a9-9a47-4bcd-9a11-3ec930d2c778"),
                            Name = "Festival Shopping List"
                        });
                });

            modelBuilder.Entity("FestivalShoppingApi.Data.Models.Category", b =>
                {
                    b.HasOne("FestivalShoppingApi.Data.Models.ShoppingList", "ShoppingList")
                        .WithMany("Categories")
                        .HasForeignKey("ShoppingListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShoppingList");
                });

            modelBuilder.Entity("FestivalShoppingApi.Data.Models.Item", b =>
                {
                    b.HasOne("FestivalShoppingApi.Data.Models.Category", "Category")
                        .WithMany("Items")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FestivalShoppingApi.Data.Models.ShoppingList", "ShoppingList")
                        .WithMany()
                        .HasForeignKey("ShoppingListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("ShoppingList");
                });

            modelBuilder.Entity("FestivalShoppingApi.Data.Models.Category", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("FestivalShoppingApi.Data.Models.ShoppingList", b =>
                {
                    b.Navigation("Categories");
                });
#pragma warning restore 612, 618
        }
    }
}
